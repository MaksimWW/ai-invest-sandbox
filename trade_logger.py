
#!/usr/bin/env python
import os
import datetime as dt
import requests

WEBHOOK = os.getenv("SHEETS_WEBHOOK_URL")
TOKEN = os.getenv("SHEETS_TOKEN")

def log_trade(date: dt.date, ticker: str, figi: str,
              side: str, price: float, qty: int, fees: float = 0):
    """
    –õ–æ–≥–∏—Ä—É–µ—Ç —Ç–æ—Ä–≥–æ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –≤ Google Sheets
    
    Args:
        date: –î–∞—Ç–∞ —Å–¥–µ–ª–∫–∏
        ticker: –¢–∏–∫–µ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, YNDX, FXIT)
        figi: FIGI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
        side: –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏ ('BUY' –∏–ª–∏ 'SELL')
        price: –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É
        qty: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
        fees: –ö–æ–º–∏—Å—Å–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0)
    
    Returns:
        str: –û—Ç–≤–µ—Ç –æ—Ç Google Sheets —Å–∫—Ä–∏–ø—Ç–∞
    
    Raises:
        RuntimeError: –ï—Å–ª–∏ webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
        requests.HTTPError: –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π
    """
    if not WEBHOOK or not TOKEN:
        raise RuntimeError("‚ùå Sheets webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SHEETS_WEBHOOK_URL –∏ SHEETS_TOKEN")

    payload = {
        "date": date.isoformat(),   # –º–æ–∂–Ω–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å: Apps Script —Å—Ç–∞–≤–∏—Ç new Date()
        "ticker": ticker,
        "figi": figi,
        "side": side.upper(),
        "price": price,
        "qty": qty,
        "fees": fees,
        "token": TOKEN
    }
    
    try:
        r = requests.post(WEBHOOK, data=payload, timeout=5)
        r.raise_for_status()          # 200 => OK
        return r.text                 # 'OK' –∏–ª–∏ –æ—à–∏–±–∫–∞ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞
    except requests.exceptions.RequestException as e:
        raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheets: {e}")

def log_signal_trade(ticker: str, figi: str, signal: str, price: float, qty: int = 1):
    """
    –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–¥–µ–ª–æ–∫ –ø–æ —Å–∏–≥–Ω–∞–ª–∞–º –±–æ—Ç–∞
    
    Args:
        ticker: –¢–∏–∫–µ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
        figi: FIGI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
        signal: –¢–æ—Ä–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª ('BUY', 'SELL', 'HOLD')
        price: –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞
        qty: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1)
    """
    if signal in ['BUY', 'SELL']:
        try:
            result = log_trade(
                date=dt.date.today(),
                ticker=ticker,
                figi=figi,
                side=signal,
                price=price,
                qty=qty
            )
            print(f"‚úÖ –°–¥–µ–ª–∫–∞ {signal} {ticker} –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∞: {result}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–¥–µ–ª–∫–∏ {ticker}: {e}")
    else:
        print(f"üìù {ticker}: —Å–∏–≥–Ω–∞–ª {signal} - —Å–¥–µ–ª–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è")

def test_sheets_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets"""
    if not WEBHOOK or not TOKEN:
        print("‚ùå Sheets webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("–î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
        print("SHEETS_WEBHOOK_URL=–≤–∞—à_webhook_url")
        print("SHEETS_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
        return False
    
    try:
        # –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å
        result = log_trade(
            date=dt.date.today(),
            ticker="TEST",
            figi="TEST_FIGI",
            side="BUY",
            price=100.0,
            qty=1,
            fees=0.1
        )
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —Ä–∞–±–æ—Ç–∞–µ—Ç: {result}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {e}")
        return False

if __name__ == "__main__":
    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    test_sheets_connection()
