"""
news_feed.py  ‚Äì   –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
-------------------------------------------------
fetch_news(ticker: str, hours: int = 24) -> list[str]
"""
import os, datetime as dt, requests

NEWSAPI_KEY = os.getenv("NEWSAPI_KEY")

def _newsapi_query(q, from_dt):
    url = "https://newsapi.org/v2/everything"
    params = {
        "q"      : q,
        "language": "en",
        "sortBy" : "publishedAt",
        "from"   : from_dt.isoformat(timespec="seconds"),
        "apiKey" : NEWSAPI_KEY,
        "pageSize": 100,
    }
    r = requests.get(url, params=params, timeout=6)
    r.raise_for_status()
    return [a["title"] for a in r.json().get("articles", [])]

def _gdelt_query(q, from_dt):
    # GDELT 2.0 Events API Verbatim
    since = int(from_dt.timestamp())
    url = ("https://api.gdeltproject.org/api/v2/doc/docsearch"
           f"?query={q}&filter=SourceCommonName:english&maxrecords=100"
           f"&format=json&mode=ArtList&filter=PublishDate>{since}")

    # –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è 3 —Ä–∞–∑–∞ —Å —É–≤–µ–ª–∏—á–∏–≤–∞—é—â–∏–º–∏—Å—è –ø–∞—É–∑–∞–º–∏
    for attempt in range(3):
        try:
            print(f"üîÑ GDELT –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}/3...")
            r = requests.get(url, timeout=20)
            r.raise_for_status()
            
            data = r.json()
            articles = data.get("artList", [])
            print(f"‚úÖ GDELT: –Ω–∞–π–¥–µ–Ω–æ {len(articles)} –Ω–æ–≤–æ—Å—Ç–µ–π")
            return [item["title"] for item in articles]
            
        except requests.exceptions.Timeout:
            print(f"‚è∞ GDELT —Ç–∞–π–º–∞—É—Ç –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ {attempt + 1}")
        except requests.exceptions.ConnectionError:
            print(f"üåê GDELT –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ {attempt + 1}")
        except Exception as e:
            print(f"‚ùå GDELT –æ—à–∏–±–∫–∞ –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ {attempt + 1}: {type(e).__name__}")
            
        if attempt < 2:  # –ù–µ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞
            import time
            sleep_time = (attempt + 1) * 3  # 3, 6 —Å–µ–∫—É–Ω–¥
            print(f"‚è≥ –ü–∞—É–∑–∞ {sleep_time} —Å–µ–∫ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º...")
            time.sleep(sleep_time)
    
    print("‚ùå GDELT –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ–≥–æ")
    return []

def fetch_news(ticker: str, hours: int = 24) -> list[str]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–Ω–≥–ª. –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ `hours` —á–∞—Å–æ–≤."""
    cutoff = dt.datetime.utcnow() - dt.timedelta(hours=hours)
    news = []
    
    # NewsAPI
    if NEWSAPI_KEY:
        print(f"üì∞ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º NewsAPI –¥–ª—è {ticker}...")
        newsapi_results = _newsapi_query(ticker, cutoff)
        news += newsapi_results
        print(f"‚úÖ NewsAPI: –Ω–∞–π–¥–µ–Ω–æ {len(newsapi_results)} –Ω–æ–≤–æ—Å—Ç–µ–π")
    else:
        print("‚ö†Ô∏è NewsAPI –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–Ω–µ—Ç NEWSAPI_KEY)")
    
    # GDELT
    gdelt_results = _gdelt_query(ticker, cutoff)
    news += gdelt_results
    
    print(f"üìä –ò—Ç–æ–≥–æ –¥–ª—è {ticker}: {len(news)} –Ω–æ–≤–æ—Å—Ç–µ–π (NewsAPI: {len(news) - len(gdelt_results)}, GDELT: {len(gdelt_results)})")
    return news