
#!/usr/bin/env python
"""
üîç –®–ê–ì–ò 3: –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Google Apps Script
==================================================
–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∞—Å–ø–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Apps Script
"""

import os
import requests
import json
from dotenv import load_dotenv

def test_step3_gas_debug():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Google Apps Script"""
    
    print("üîç –®–ê–ì–ò 3: –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Google Apps Script")
    print("=" * 60)
    
    load_dotenv()
    
    webhook_url = os.getenv("SHEETS_WEBHOOK_URL")
    token = os.getenv("SHEETS_TOKEN")
    
    print("üìã 1. –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò")
    print("-" * 40)
    
    if not webhook_url:
        print("‚ùå SHEETS_WEBHOOK_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        return False
    
    if not token:
        print("‚ùå SHEETS_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env") 
        return False
    
    print(f"‚úÖ URL: {webhook_url[:50]}...")
    print(f"‚úÖ Token: {token}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç URL
    if not webhook_url.startswith("https://script.google.com/macros/s/"):
        print("‚ö†Ô∏è  URL –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ Google Apps Script webhook")
        print("   –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: https://script.google.com/macros/s/SCRIPT_ID/exec")
    
    print("\nüìã 2. –¢–ï–°–¢ PING (–±–µ–∑ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É)")
    print("-" * 40)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π ping
    ping_payload = {
        "test": "ping",
        "token": token
    }
    
    try:
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ping –∑–∞–ø—Ä–æ—Å...")
        response = requests.post(webhook_url, data=ping_payload, timeout=15)
        
        print(f"üìä HTTP Status: {response.status_code}")
        print(f"üìÑ Response: {response.text[:200]}...")
        
        if response.status_code != 200:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—Ç–≤–µ—Ç–∞
        if response.text.startswith('<!DOCTYPE html>') or '<html>' in response.text:
            print("‚ùå –ü–æ–ª—É—á–µ–Ω HTML –≤–º–µ—Å—Ç–æ JSON - —Å–∫—Ä–∏–ø—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            analyze_html_error(response.text)
            return False
            
        # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
        try:
            json_response = json.loads(response.text)
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω JSON –æ—Ç–≤–µ—Ç: {json_response}")
            
            if json_response.get("ok") == True:
                print("‚úÖ Ping —Ç–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω!")
            elif json_response.get("error") == "Unauthorized":
                print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω")
                print(f"   –û–∂–∏–¥–∞–µ–º—ã–π —Ç–æ–∫–µ–Ω –≤ —Å–∫—Ä–∏–ø—Ç–µ: {token}")
                print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ç–æ–∫–µ–Ω –≤ —Å–∫—Ä–∏–ø—Ç–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å .env")
                return False
            else:
                print(f"‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {json_response}")
                
        except json.JSONDecodeError:
            print(f"‚ö†Ô∏è  –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è JSON: {response.text}")
            
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ - —Å–∫—Ä–∏–ø—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False
    
    print("\nüìã 3. –¢–ï–°–¢ –ó–ê–ü–ò–°–ò –í –¢–ê–ë–õ–ò–¶–£")
    print("-" * 40)
    
    # –¢–µ—Å—Ç 2: –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö
    test_payload = {
        "date": "2025-06-12",
        "ticker": "TEST",
        "figi": "TEST_FIGI",
        "side": "BUY", 
        "price": "100.0",
        "qty": "1",
        "fees": "0.1",
        "token": token
    }
    
    try:
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏...")
        response = requests.post(webhook_url, data=test_payload, timeout=15)
        
        print(f"üìä HTTP Status: {response.status_code}")
        print(f"üìÑ Response: {response.text[:300]}...")
        
        if response.text.startswith('<!DOCTYPE html>'):
            print("‚ùå –ü–æ–ª—É—á–µ–Ω HTML - –æ—à–∏–±–∫–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏")
            analyze_html_error(response.text)
            return False
            
        try:
            json_response = json.loads(response.text)
            
            if json_response.get("ok") == True:
                print("‚úÖ –ó–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É —É—Å–ø–µ—à–Ω–∞!")
                print(f"‚úÖ –î–∞–Ω–Ω—ã–µ: {json_response.get('data', 'N/A')}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏: {json_response.get('error', 'Unknown')}")
                return False
                
        except json.JSONDecodeError:
            if response.text.strip() == "OK":
                print("‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç 'OK' - –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–∞!")
                return True
            else:
                print(f"‚ö†Ô∏è  –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
                return False
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏: {e}")
        return False

def analyze_html_error(html_text):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç HTML –æ—à–∏–±–∫—É –æ—Ç Google Apps Script"""
    
    print("\nüîç –ê–ù–ê–õ–ò–ó HTML –û–®–ò–ë–ö–ò:")
    print("-" * 30)
    
    # –ò—â–µ–º —Ç–∏–ø–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏
    error_patterns = {
        "TypeError": "–û—à–∏–±–∫–∞ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö",
        "ReferenceError": "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", 
        "openById": "–ü—Ä–æ–±–ª–µ–º–∞ —Å ID —Ç–∞–±–ª–∏—Ü—ã",
        "appendRow": "–ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–ø–∏—Å—å—é –≤ –ª–∏—Å—Ç",
        "getActiveSheet": "–ü—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –ª–∏—Å—Ç—É",
        "Authorization": "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞"
    }
    
    found_errors = []
    
    for pattern, description in error_patterns.items():
        if pattern in html_text:
            found_errors.append(f"‚Ä¢ {description} (–Ω–∞–π–¥–µ–Ω–æ: {pattern})")
    
    if found_errors:
        print("üö® –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
        for error in found_errors:
            print(f"   {error}")
    else:
        print("‚ùì –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞")
    
    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
    if "openById" in html_text:
        print("\nüí° –†–ï–®–ï–ù–ò–ï:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID —Ç–∞–±–ª–∏—Ü—ã –≤ Google Apps Script")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–æ—Å—Ç—É–ø–Ω–∞")
        print("3. ID –±–µ—Ä–µ—Ç—Å—è –∏–∑ URL: docs.google.com/spreadsheets/d/ID_–ó–î–ï–°–¨/edit")
        
    elif "appendRow" in html_text:
        print("\nüí° –†–ï–®–ï–ù–ò–ï:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º—è –ª–∏—Å—Ç–∞ (Sheet1, –õ–∏—Å—Ç1)")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É —Å–∫—Ä–∏–ø—Ç–∞ –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å")
        print("3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –ª–∏—Å—Ç")

def show_gas_checklist():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á–µ–∫–ª–∏—Å—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Apps Script"""
    
    print("\n" + "=" * 60)
    print("üìã –ß–ï–ö–õ–ò–°–¢ –ù–ê–°–¢–†–û–ô–ö–ò GOOGLE APPS SCRIPT")
    print("=" * 60)
    
    checklist = [
        "‚ñ° –°–æ–∑–¥–∞–Ω–∞ Google Sheets —Ç–∞–±–ª–∏—Ü–∞",
        "‚ñ° –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω ID —Ç–∞–±–ª–∏—Ü—ã –∏–∑ URL",
        "‚ñ° –°–æ–∑–¥–∞–Ω –ø—Ä–æ–µ–∫—Ç –≤ script.google.com",
        "‚ñ° –í—Å—Ç–∞–≤–ª–µ–Ω –∫–æ–¥ –∏–∑ new_google_apps_script.js",
        "‚ñ° –í –∫–æ–¥–µ –∑–∞–º–µ–Ω–µ–Ω SPREADSHEET_ID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID",
        "‚ñ° –í –∫–æ–¥–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω —Ç–æ–∫–µ–Ω (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'mySecret123')",
        "‚ñ° –°–∫—Ä–∏–ø—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω (Ctrl+S)",
        "‚ñ° –ù–∞–∂–∞—Ç–æ '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å' -> '–ù–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ'",
        "‚ñ° –í—ã–±—Ä–∞–Ω —Ç–∏–ø '–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'",
        "‚ñ° –î–æ—Å—Ç—É–ø '–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'",
        "‚ñ° –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
        "‚ñ° URL –¥–æ–±–∞–≤–ª–µ–Ω –≤ SHEETS_WEBHOOK_URL –≤ .env"
    ]
    
    for item in checklist:
        print(f"  {item}")
    
    print(f"\nüîß –¢–ï–ö–£–©–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:")
    print(f"   Token –≤ .env: {os.getenv('SHEETS_TOKEN', '–ù–ï –ù–ê–ô–î–ï–ù')}")
    print(f"   URL –≤ .env: {os.getenv('SHEETS_WEBHOOK_URL', '–ù–ï –ù–ê–ô–î–ï–ù')[:50]}...")

if __name__ == "__main__":
    success = test_step3_gas_debug()
    
    if not success:
        show_gas_checklist()
        print("\nüîÑ –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
        print("python test_step3_gas_debug.py")
    else:
        print("\nüéâ Google Apps Script —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("üöÄ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
