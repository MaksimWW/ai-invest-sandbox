
#!/usr/bin/env python
"""
–¢–µ—Å—Ç –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω–æ–≥–æ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
"""

import os
import sys
sys.path.append('.')
from news_feed import fetch_news

def test_english_news():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω–æ–≥–æ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    
    print("üì∞ –¢–ï–°–¢ –ê–ù–ì–õ–û–Ø–ó–´–ß–ù–û–ì–û –ê–ì–†–ï–ì–ê–¢–û–†–ê –ù–û–í–û–°–¢–ï–ô")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É API –∫–ª—é—á–∞
    newsapi_key = os.getenv("NEWSAPI_KEY")
    if newsapi_key:
        masked_key = newsapi_key[:8] + "..." if len(newsapi_key) > 8 else "***"
        print(f"üîë NewsAPI Key: {masked_key}")
    else:
        print("‚ö†Ô∏è NewsAPI Key: –ù–ï –ù–ê–°–¢–†–û–ï–ù (–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ GDELT)")
    
    print(f"üåê –ò—Å—Ç–æ—á–Ω–∏–∫–∏:")
    print(f"   ‚Ä¢ NewsAPI.org {'‚úÖ' if newsapi_key else '‚ùå'}")
    print(f"   ‚Ä¢ GDELT Project ‚úÖ")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–∏–∫–µ—Ä—ã
    test_tickers = ["AAPL", "TSLA", "GOOGL", "MSFT", "NVDA", "META"]
    
    print(f"\nüîç –ò—â–µ–º –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 48 —á–∞—Å–æ–≤...")
    print("-" * 60)
    
    total_news = 0
    
    for ticker in test_tickers:
        print(f"\nüìä {ticker}:")
        
        try:
            news_list = fetch_news(ticker, hours=48)
            
            if news_list:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(news_list)} –Ω–æ–≤–æ—Å—Ç–µ–π")
                total_news += len(news_list)
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –Ω–æ–≤–æ—Å—Ç–∏
                for i, title in enumerate(news_list[:3], 1):
                    print(f"   {i}. {title[:100]}...")
                
                if len(news_list) > 3:
                    print(f"   ... –∏ –µ—â—ë {len(news_list) - 3} –Ω–æ–≤–æ—Å—Ç–µ–π")
            else:
                print(f"   ‚ùå –ù–æ–≤–æ—Å—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
        except Exception as e:
            print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
    
    print(f"\nüìà –ò–¢–û–ì–û:")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {total_news}")
    print(f"   ‚Ä¢ NewsAPI —Å—Ç–∞—Ç—É—Å: {'–ê–∫—Ç–∏–≤–µ–Ω' if newsapi_key else '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
    print(f"   ‚Ä¢ GDELT —Å—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω")
    
    if total_news > 0:
        print("   ‚úÖ –ê–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã–π –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("   ‚ö†Ô∏è –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - –≤–æ–∑–º–æ–∂–Ω–æ, —Ç–∏–∫–µ—Ä—ã –Ω–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã –≤ –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã—Ö –°–ú–ò")

def test_gdelt_specifically():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ GDELT API"""
    
    print(f"\nüåê –î–ï–¢–ê–õ–¨–ù–´–ô –¢–ï–°–¢ GDELT API")
    print("-" * 50)
    
    import requests
    import datetime as dt
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ GDELT
    test_query = "AAPL"
    since = int((dt.datetime.utcnow() - dt.timedelta(hours=24)).timestamp())
    
    url = (f"https://api.gdeltproject.org/api/v2/doc/docsearch"
           f"?query={test_query}&filter=SourceCommonName:english&maxrecords=10"
           f"&format=json&mode=ArtList&filter=PublishDate>{since}")
    
    print(f"üîó –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: {test_query}")
    print(f"üìÖ –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞")
    
    try:
        print("üì§ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º GDELT API...")
        response = requests.get(url, timeout=10)
        
        print(f"üìä HTTP Status: {response.status_code}")
        
        if response.status_code == 200:
            try:
                data = response.json()
                articles = data.get("artList", [])
                print(f"üì∞ –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
                
                if articles:
                    print(f"üìù –ü—Ä–∏–º–µ—Ä—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤:")
                    for i, article in enumerate(articles[:3], 1):
                        title = article.get("title", "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞")
                        print(f"   {i}. {title[:80]}...")
                    print("   ‚úÖ GDELT API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                else:
                    print("   ‚ÑπÔ∏è –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ç–∏–∫–µ—Ä–æ–≤)")
                    
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def show_setup_instructions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ NewsAPI"""
    
    print(f"\nüõ†Ô∏è –ù–ê–°–¢–†–û–ô–ö–ê NEWSAPI (–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û)")
    print("-" * 50)
    
    print("üìã –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª—å—à–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–æ–≤–æ—Å—Ç–µ–π:")
    print("   1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ https://newsapi.org/")
    print("   2. –ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π API –∫–ª—é—á")
    print("   3. –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
    print("      NEWSAPI_KEY=–≤–∞—à_–∫–ª—é—á_–∑–¥–µ—Å—å")
    print("   4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç")
    
    print(f"\nüí° –ë–ï–ó NEWSAPI:")
    print("   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ GDELT Project")
    print("   ‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω–æ –∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π")
    print("   ‚Ä¢ –ú–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –º–Ω–æ–≥–∏—Ö —Å–ª—É—á–∞–µ–≤")

if __name__ == "__main__":
    test_english_news()
    test_gdelt_specifically()
    show_setup_instructions()
