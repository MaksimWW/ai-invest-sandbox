
#!/usr/bin/env python
"""
ü§ñ –ü–û–®–ê–ì–û–í–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –ë–û–¢–ê
==================================================
–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –∫–æ–º–∞–Ω–¥—É –±–æ—Ç–∞ –æ—Ç–¥–µ–ª—å–Ω–æ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
"""

import os
import sys
import time
import requests
from dotenv import load_dotenv

def step1_check_telegram_config():
    """–®–ê–ì 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram"""
    
    print("üîç –®–ê–ì 1: –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò TELEGRAM")
    print("=" * 60)
    
    load_dotenv()
    
    telegram_token = os.getenv("TELEGRAM_TOKEN")
    telegram_chat_id = os.getenv("TELEGRAM_CHAT_ID")
    
    print("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    
    if not telegram_token or telegram_token == "PLACEHOLDER":
        print("‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("\nüîß –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ù–ê–°–¢–†–û–ô–ö–ï:")
        print("1. –ù–∞–π–¥–∏—Ç–µ @BotFather –≤ Telegram")
        print("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /newbot")
        print("3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞")
        print("4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω")
        print("5. –î–æ–±–∞–≤—å—Ç–µ –≤ —Ñ–∞–π–ª .env:")
        print("   TELEGRAM_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–æ—Ç_botfather")
        return False
    
    if not telegram_chat_id or telegram_chat_id == "PLACEHOLDER":
        print("‚ùå TELEGRAM_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("\nüîß –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ü–û–õ–£–ß–ï–ù–ò–Æ CHAT_ID:")
        print("1. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ–º—É –±–æ—Ç—É –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
        print(f"   https://api.telegram.org/bot{telegram_token}/getUpdates")
        print("3. –ù–∞–π–¥–∏—Ç–µ 'chat':{'id':–ß–ò–°–õ–û}")
        print("4. –î–æ–±–∞–≤—å—Ç–µ –≤ —Ñ–∞–π–ª .env:")
        print("   TELEGRAM_CHAT_ID=–Ω–∞–π–¥–µ–Ω–Ω–æ–µ_—á–∏—Å–ª–æ")
        return False
    
    print(f"‚úÖ TELEGRAM_TOKEN: {telegram_token[:10]}...")
    print(f"‚úÖ TELEGRAM_CHAT_ID: {telegram_chat_id}")
    
    return True

def step2_test_bot_connection():
    """–®–ê–ì 2: –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API"""
    
    print("\nüîç –®–ê–ì 2: –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö TELEGRAM API")
    print("=" * 60)
    
    telegram_token = os.getenv("TELEGRAM_TOKEN")
    
    print("üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram API...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        url = f"https://api.telegram.org/bot{telegram_token}/getMe"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            bot_info = response.json()
            if bot_info.get("ok"):
                bot_data = bot_info["result"]
                print(f"‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω: @{bot_data['username']}")
                print(f"üìã –ò–º—è –±–æ—Ç–∞: {bot_data['first_name']}")
                print(f"üÜî ID –±–æ—Ç–∞: {bot_data['id']}")
                return True
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ API")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def step3_send_test_message():
    """–®–ê–ì 3: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    
    print("\nüîç –®–ê–ì 3: –û–¢–ü–†–ê–í–ö–ê –¢–ï–°–¢–û–í–û–ì–û –°–û–û–ë–©–ï–ù–ò–Ø")
    print("=" * 60)
    
    telegram_token = os.getenv("TELEGRAM_TOKEN")
    telegram_chat_id = os.getenv("TELEGRAM_CHAT_ID")
    
    print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É...")
    
    try:
        url = f"https://api.telegram.org/bot{telegram_token}/sendMessage"
        payload = {
            "chat_id": telegram_chat_id,
            "text": "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞\n\n–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!"
        }
        
        response = requests.post(url, json=payload, timeout=10)
        
        if response.status_code == 200:
            result = response.json()
            if result.get("ok"):
                print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
                print("üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram - –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {result}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False

def step4_instructions_for_bot_start():
    """–®–ê–ì 4: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞"""
    
    print("\nüîç –®–ê–ì 4: –ó–ê–ü–£–°–ö TELEGRAM –ë–û–¢–ê")
    print("=" * 60)
    
    print("üöÄ –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ó–ê–ü–£–°–ö–£:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª –≤ Replit")
    print("2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:")
    print("   python daily_plan_bot.py bot")
    print("3. –î–æ–∂–¥–∏—Ç–µ—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è 'ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω...'")
    print("4. –ù–ï –ó–ê–ö–†–´–í–ê–ô–¢–ï —Ç–µ—Ä–º–∏–Ω–∞–ª - –±–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ")
    
    print("\n‚ö†Ô∏è  –í–ê–ñ–ù–û:")
    print("‚Ä¢ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ñ–æ–Ω–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥")
    print("‚Ä¢ –ï—Å–ª–∏ –∑–∞–∫—Ä–æ–µ—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª, –±–æ—Ç –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å")
    print("‚Ä¢ –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ")
    
    return True

def step5_test_commands_list():
    """–®–ê–ì 5: –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("\nüîç –®–ê–ì 5: –ö–û–ú–ê–ù–î–´ –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 60)
    
    print("üìã –¢–ï–°–¢–ò–†–£–ô–¢–ï –ö–û–ú–ê–ù–î–´ –í –°–õ–ï–î–£–Æ–©–ï–ú –ü–û–†–Ø–î–ö–ï:")
    print("(–æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç—É –≤ Telegram)")
    
    commands = [
        ("1Ô∏è‚É£", "/help", "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥", "–î–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"),
        ("2Ô∏è‚É£", "/config", "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Google Sheets", "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫"),
        ("3Ô∏è‚É£", "/test_sheets", "–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Sheets", "–ó–∞–ø–∏—Å–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å"),
        ("4Ô∏è‚É£", "/prices", "–ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –∞–∫—Ü–∏–π", "–ü–æ–∫–∞–∑–∞—Ç—å —Ü–µ–Ω—ã YNDX –∏ FXIT"),
        ("5Ô∏è‚É£", "/signals", "–ü–æ–ª—É—á–∏—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã", "–ü–æ–∫–∞–∑–∞—Ç—å —Å–∏–≥–Ω–∞–ª—ã BUY/SELL/HOLD"),
        ("6Ô∏è‚É£", "/log BUY YNDX 10 2500.50", "–ó–∞–ø–∏—Å–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é —Å–¥–µ–ª–∫—É", "–ó–∞–ø–∏—Å–∞—Ç—å —Å–¥–µ–ª–∫—É –≤ Sheets"),
        ("7Ô∏è‚É£", "/debug", "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏", "–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
    ]
    
    for num, cmd, desc, expected in commands:
        print(f"\n{num} –ö–û–ú–ê–ù–î–ê: {cmd}")
        print(f"   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {desc}")
        print(f"   ‚úÖ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {expected}")
    
    print("\nüîÑ –ü–û–†–Ø–î–û–ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python daily_plan_bot.py bot")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –Ω–∞–π–¥–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞")
    print("3. –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏")
    print("4. –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –æ—Ç–≤–µ—Ç—ã –±–æ—Ç–∞")
    print("5. –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ")
    
    return True

def step6_troubleshooting():
    """–®–ê–ì 6: –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º"""
    
    print("\nüîç –®–ê–ì 6: –†–ï–®–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú")
    print("=" * 60)
    
    print("üö® –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–û–ë–õ–ï–ú–´ –ò –†–ï–®–ï–ù–ò–Ø:")
    
    problems = [
        ("–ë–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã", [
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω (python daily_plan_bot.py bot)",
            "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–µ—Ä–º–∏–Ω–∞–ª —Å –±–æ—Ç–æ–º –Ω–µ –∑–∞–∫—Ä—ã—Ç",
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ TELEGRAM_TOKEN –∏ TELEGRAM_CHAT_ID –≤ .env"
        ]),
        ("–ö–æ–º–∞–Ω–¥–∞ /test_sheets –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç", [
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SHEETS_WEBHOOK_URL –≤ .env",
            "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Google Apps Script –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω",
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SHEETS_TOKEN –≤ .env –∏ —Å–∫—Ä–∏–ø—Ç–µ"
        ]),
        ("–ö–æ–º–∞–Ω–¥–∞ /prices –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç", [
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ TINKOFF_SANDBOX_TOKEN –≤ .env",
            "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –∞–∫—Ç–∏–≤–µ–Ω",
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É"
        ]),
        ("–ö–æ–º–∞–Ω–¥–∞ /log –Ω–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ", [
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /log BUY TICKER QTY PRICE",
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ YNDX –∏–ª–∏ FXIT –∫–∞–∫ —Ç–∏–∫–µ—Ä—ã",
            "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Google Sheets –¥–æ—Å—Ç—É–ø–Ω—ã"
        ])
    ]
    
    for problem, solutions in problems:
        print(f"\n‚ùå {problem}:")
        for solution in solutions:
            print(f"   {solution}")
    
    print("\nüîß –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê:")
    print("‚Ä¢ –°–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –≥–¥–µ –∑–∞–ø—É—â–µ–Ω –±–æ—Ç")
    print("‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /debug –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤")
    print("‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª debug_sheets.log –¥–ª—è –æ—à–∏–±–æ–∫ Sheets")
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —à–∞–≥–∏"""
    
    print("ü§ñ –ü–û–®–ê–ì–û–í–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –ë–û–¢–ê")
    print("=" * 70)
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ–¥–µ—Ç –≤–∞—Å —á–µ—Ä–µ–∑ –≤—Å–µ —ç—Ç–∞–ø—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("=" * 70)
    
    # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if not step1_check_telegram_config():
        print("\n‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞.")
        return
    
    # –®–∞–≥ 2: –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if not step2_test_bot_connection():
        print("\n‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.")
        return
    
    # –®–∞–≥ 3: –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    if not step3_send_test_message():
        print("\n‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.")
        return
    
    # –®–∞–≥ 4: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É
    step4_instructions_for_bot_start()
    
    # –®–∞–≥ 5: –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
    step5_test_commands_list()
    
    # –®–∞–≥ 6: –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
    step6_troubleshooting()
    
    print("\n" + "=" * 70)
    print("üéâ –ü–û–î–ì–û–¢–û–í–ö–ê –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("=" * 70)
    print("üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python daily_plan_bot.py bot")
    print("2. –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤ Telegram –ø–æ —Å–ø–∏—Å–∫—É –≤—ã—à–µ")
    print("3. –°–æ–æ–±—â–∞–π—Ç–µ –æ –ª—é–±—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö –¥–ª—è —Ä–µ—à–µ–Ω–∏—è")

if __name__ == "__main__":
    main()
