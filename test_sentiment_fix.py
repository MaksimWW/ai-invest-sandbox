
#!/usr/bin/env python
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ ensemble –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
"""

def test_ensemble_sentiment():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π ensemble –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä"""
    print("üé≠ –¢–ï–°–¢ ENSEMBLE –ê–ù–ê–õ–ò–ó–ê–¢–û–†–ê –ù–ê–°–¢–†–û–ï–ù–ò–ô")
    print("=" * 70)

    try:
        from nlp.sentiment import classify_ru_ensemble, classify_en_ensemble, classify_multi
        print("‚úÖ –ò–º–ø–æ—Ä—Ç ensemble —Ñ—É–Ω–∫—Ü–∏–π —É—Å–ø–µ—à–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
    financial_tests = [
        # –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Å —Å–∏–ª—å–Ω—ã–º–∏ —Å–∏–≥–Ω–∞–ª–∞–º–∏
        ("–ê–∫—Ü–∏–∏ –°–±–µ—Ä–±–∞–Ω–∫–∞ –ø–æ–∫–∞–∑–∞–ª–∏ —Ä–µ–∫–æ—Ä–¥–Ω—ã–π —Ä–æ—Å—Ç –Ω–∞ 15% –ø–æ—Å–ª–µ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤", "positive"),
        ("–ö–æ–º–ø–∞–Ω–∏—è –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∞ –ø—Ä–æ—Ä—ã–≤ –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö, –∞–∫—Ü–∏–∏ –≤–∑–ª–µ—Ç–µ–ª–∏ –Ω–∞ 12%", "positive"),
        ("Apple stock surged 18% after breakthrough earnings beat", "positive"),
        ("Tesla shares soared 20% on record delivery numbers", "positive"),
        
        # –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —É–º–µ—Ä–µ–Ω–Ω—ã–µ
        ("–ü—Ä–∏–±—ã–ª—å –∫–æ–º–ø–∞–Ω–∏–∏ –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ 8% –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–æ—à–ª—ã–º –≥–æ–¥–æ–º", "positive"),
        ("–î–æ—Ö–æ–¥—ã —É–≤–µ–ª–∏—á–∏–ª–∏—Å—å –Ω–∞ 6.5% –±–ª–∞–≥–æ–¥–∞—Ä—è —É–ª—É—á—à–µ–Ω–∏—é –ø—Ä–æ–¥–∞–∂", "positive"),
        ("Microsoft shares gained 7% on improved revenue guidance", "positive"),
        ("Netflix stock rose 5% after subscriber growth", "positive"),
        
        # –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Å —Å–∏–ª—å–Ω—ã–º–∏ —Å–∏–≥–Ω–∞–ª–∞–º–∏
        ("–ü—Ä–æ–∏–∑–æ—à–µ–ª –æ–±–≤–∞–ª –∞–∫—Ü–∏–π –Ω–∞ 20% –ø–æ—Å–ª–µ –∫—Ä–∏–∑–∏—Å–∞ –≤ –∫–æ–º–ø–∞–Ω–∏–∏", "negative"),
        ("–ö–æ—Ç–∏—Ä–æ–≤–∫–∏ —Ä—É—Ö–Ω—É–ª–∏ –Ω–∞ 15% –∏–∑-–∑–∞ –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∏—á–µ—Å–∫–∏—Ö —É–±—ã—Ç–∫–æ–≤", "negative"),
        ("GameStop shares plummeted 25% after massive losses", "negative"),
        ("Crypto market crashed 30% following regulatory concerns", "negative"),
        
        # –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —É–º–µ—Ä–µ–Ω–Ω—ã–µ
        ("–°—Ç–æ–∏–º–æ—Å—Ç—å –∞–∫—Ü–∏–π —Å–Ω–∏–∑–∏–ª–∞—Å—å –Ω–∞ 7% –ø–æ—Å–ª–µ —Å–ª–∞–±—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤", "negative"),
        ("–¶–µ–Ω–∞ —É–ø–∞–ª–∞ –Ω–∞ 5% –∏–∑-–∑–∞ —Å–Ω–∏–∂–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–æ–≤", "negative"),
        ("Amazon stock declined 6% on disappointing guidance", "negative"),
        ("Ford shares dropped 4% after production cuts", "negative"),
        
        # –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ (–≤–∞–∂–Ω—ã–µ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤)
        ("–¢–æ—Ä–≥–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å –±–µ–∑ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π", "neutral"),
        ("–¶–µ–Ω–∞ –æ—Å—Ç–∞–ª–∞—Å—å —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –Ω–∞ —É—Ä–æ–≤–Ω–µ 150 —Ä—É–±–ª–µ–π", "neutral"),
        ("Google stock remained flat with 0.2% change", "neutral"),
        ("Boeing shares traded sideways with minimal movement", "neutral"),
        
        # –°–º–µ—à–∞–Ω–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã (—Ç–µ—Å—Ç —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏)
        ("–ê–∫—Ü–∏–∏ –≤—ã—Ä–æ—Å–ª–∏ –Ω–∞ 3%, –Ω–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å–Ω–∏–∑–∏–ª–∏ —Ä–µ–π—Ç–∏–Ω–≥", "neutral"),
        ("–ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —É–±—ã—Ç–∫–∏, –∫–æ–º–ø–∞–Ω–∏—è –ø–æ–≤—ã—Å–∏–ª–∞ –¥–∏–≤–∏–¥–µ–Ω–¥—ã –Ω–∞ 2%", "neutral"),
        ("Mixed earnings results led to 1% gain in volatile trading", "neutral"),
        
        # –ú–∞–ª—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–º–∏)
        ("–ù–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π —Ä–æ—Å—Ç –Ω–∞ 0.8% –ø—Ä–∏ –Ω–∏–∑–∫–∏—Ö –æ–±—ä–µ–º–∞—Ö", "neutral"),
        ("–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –Ω–∞ 1.2% –≤ —Å–ø–æ–∫–æ–π–Ω—ã—Ö —Ç–æ—Ä–≥–∞—Ö", "neutral"),
    ]

    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º {len(financial_tests)} —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤:")
    print("-" * 70)

    correct = 0
    total = len(financial_tests)
    results_by_category = {
        'positive': {'correct': 0, 'total': 0},
        'negative': {'correct': 0, 'total': 0},
        'neutral': {'correct': 0, 'total': 0}
    }

    for i, (text, expected) in enumerate(financial_tests, 1):
        print(f"\nüìù –¢–µ—Å—Ç {i}: {text}")
        print(f"üéØ –û–∂–∏–¥–∞–µ–º: {expected}")

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –∏ –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
        if any(russian_char in text.lower() for russian_char in "–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è"):
            result = classify_ru_ensemble(text)
        else:
            result = classify_en_ensemble(text)

        print(f"‚úÖ –ü–æ–ª—É—á–∏–ª–∏: {result}")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        results_by_category[expected]['total'] += 1
        if result == expected:
            print("‚úÖ –ü–†–û–ô–î–ï–ù")
            correct += 1
            results_by_category[expected]['correct'] += 1
        else:
            print("‚ùå –ü–†–û–í–ê–õ–ï–ù")

        print("-" * 50)

    # –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    accuracy = (correct / total) * 100
    print(f"\nüìä –î–ï–¢–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ ENSEMBLE –ê–ù–ê–õ–ò–ó–ê:")
    print(f"‚úÖ –û–±—â–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å: {correct}/{total} = {accuracy:.1f}%")
    
    for category, stats in results_by_category.items():
        if stats['total'] > 0:
            cat_accuracy = (stats['correct'] / stats['total']) * 100
            print(f"üìà {category.upper()}: {stats['correct']}/{stats['total']} = {cat_accuracy:.1f}%")

    return accuracy

def test_model_ensemble_details():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª–∏ —Ä–∞–±–æ—Ç—ã ensemble"""
    print("\nüî¨ –¢–ï–°–¢ –î–ï–¢–ê–õ–ï–ô ENSEMBLE –ú–û–î–ï–õ–ò")
    print("=" * 50)
    
    from nlp.sentiment import _ensemble_analyzer
    
    test_texts = [
        "–ê–∫—Ü–∏–∏ –≤—ã—Ä–æ—Å–ª–∏ –Ω–∞ 15% –ø–æ—Å–ª–µ —Ä–µ–∫–æ—Ä–¥–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
        "Apple stock surged 12% on strong earnings",
        "–¶–µ–Ω–∞ –æ—Å—Ç–∞–ª–∞—Å—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    ]
    
    for text in test_texts:
        print(f"\nüì∞ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º: '{text}'")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
        lang = "ru" if any(c in text.lower() for c in "–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è") else "en"
        financial_signals = _ensemble_analyzer._extract_financial_signals(text, lang)
        print(f"üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã: {financial_signals}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–æ–≤–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        numeric_context = _ensemble_analyzer._extract_numeric_context(text)
        print(f"üî¢ –ß–∏—Å–ª–æ–≤–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: {numeric_context}")

def test_performance_comparison():
    """–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å—Ç–∞—Ä–æ–≥–æ –∏ –Ω–æ–≤–æ–≥–æ –ø–æ–¥—Ö–æ–¥–æ–≤"""
    print("\n‚ö° –°–†–ê–í–ù–ï–ù–ò–ï –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò")
    print("=" * 50)
    
    # –ù–∞–±–æ—Ä —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    comparison_tests = [
        ("–ê–∫—Ü–∏–∏ –°–±–µ—Ä–±–∞–Ω–∫–∞ –≤—ã—Ä–æ—Å–ª–∏ –Ω–∞ 5%", "positive"),
        ("–ö–æ–º–ø–∞–Ω–∏—è –ø–æ–∫–∞–∑–∞–ª–∞ —É–±—ã—Ç–∫–∏", "negative"),
        ("–¶–µ–Ω–∞ –æ—Å—Ç–∞–ª–∞—Å—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π", "neutral"),
        ("Apple stock surged after earnings", "positive"),
        ("Tesla shares plummeted", "negative"),
        ("Microsoft remained flat", "neutral")
    ]
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ –∏ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        from nlp.sentiment import classify_ru_ensemble, classify_en_ensemble
        # –ú–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ, –Ω–æ –æ–Ω–∏ —Ç–µ–ø–µ—Ä—å —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –Ω–æ–≤—ã–µ
        
        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π ensemble –ø–æ–¥—Ö–æ–¥...")
        
        ensemble_correct = 0
        for text, expected in comparison_tests:
            if any(c in text.lower() for c in "–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è"):
                result = classify_ru_ensemble(text)
            else:
                result = classify_en_ensemble(text)
            
            if result == expected:
                ensemble_correct += 1
            
            print(f"üìù '{text[:30]}...' ‚Üí {result} ({'‚úÖ' if result == expected else '‚ùå'})")
        
        ensemble_accuracy = (ensemble_correct / len(comparison_tests)) * 100
        print(f"\nüéØ Ensemble —Ç–æ—á–Ω–æ—Å—Ç—å: {ensemble_accuracy:.1f}%")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ENSEMBLE –ê–ù–ê–õ–ò–ó–ê–¢–û–†–ê")
    print("=" * 70)
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
    accuracy = test_ensemble_sentiment()
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
    test_model_ensemble_details()
    test_performance_comparison()
    
    print(f"\nüèÜ –§–ò–ù–ê–õ–¨–ù–ê–Ø –û–¶–ï–ù–ö–ê ENSEMBLE –°–ò–°–¢–ï–ú–´:")
    if accuracy >= 85:
        print("ü•á –ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! Ensemble —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ")
    elif accuracy >= 75:
        print("ü•à –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ")
    elif accuracy >= 65:
        print("ü•â –•–æ—Ä–æ—à–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å! Ensemble –ø–æ–¥—Ö–æ–¥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª")
    else:
        print("‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–∞–ª—å–Ω–µ–π—à–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ ensemble —Å–∏—Å—Ç–µ–º—ã")
        
    print("\nüí° –ö–õ–Æ–ß–ï–í–´–ï –û–°–û–ë–ï–ù–ù–û–°–¢–ò –ù–û–í–û–ì–û –ü–û–î–•–û–î–ê:")
    print("‚Ä¢ ü§ñ –ú—É–ª—å—Ç–∏–º–æ–¥–µ–ª—å–Ω—ã–π ensemble (RuBERT + Multilingual + FinBERT)")
    print("‚Ä¢ üí∞ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Å–ª–æ–≤–∞—Ä–∏") 
    print("‚Ä¢ üî¢ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —á–∏—Å–ª–æ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π")
    print("‚Ä¢ ‚öñÔ∏è –í–∑–≤–µ—à–µ–Ω–Ω–æ–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤")
    print("‚Ä¢ üåç –û—Ç–¥–µ–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ")
