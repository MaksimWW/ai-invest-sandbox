
#!/usr/bin/env python
"""
–£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —Å –æ—Ç–ª–∞–¥–∫–æ–π
"""

def test_sentiment_debug():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π"""
    print("üîç –û–¢–õ–ê–î–û–ß–ù–´–ô –¢–ï–°–¢ –ê–ù–ê–õ–ò–ó–ê –ù–ê–°–¢–†–û–ï–ù–ò–Ø")
    print("=" * 60)
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
    try:
        from nlp.sentiment import classify_ru, classify_en, classify_multi
        print("‚úÖ –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π —É—Å–ø–µ—à–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—ã —Å –æ–∂–∏–¥–∞–µ–º—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    test_cases = [
        # –†—É—Å—Å–∫–∏–µ —Ç–µ–∫—Å—Ç—ã
        ("–°–±–µ—Ä–±–∞–Ω–∫ –ø–æ–∫–∞–∑–∞–ª —Ä–µ–∫–æ—Ä–¥–Ω—É—é –ø—Ä–∏–±—ã–ª—å", "ru", "positive"),
        ("–û—Ç–ª–∏—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤!", "ru", "positive"),
        ("–ê–∫—Ü–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏ —É–ø–∞–ª–∏ –Ω–∞ 10%", "ru", "negative"),
        ("–¶–µ–Ω–∞ –æ—Å—Ç–∞–ª–∞—Å—å –Ω–∞ —Ç–æ–º –∂–µ —É—Ä–æ–≤–Ω–µ", "ru", "neutral"),
        
        # –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ —Ç–µ–∫—Å—Ç—ã
        ("NVIDIA stock is performing exceptionally well", "en", "positive"),
        ("Great news for NVIDIA stock", "en", "positive"),
        ("Stock market crashed today", "en", "negative"),
        ("The price remained stable", "en", "neutral")
    ]
    
    print(f"\nüìä –ü–û–î–†–û–ë–ù–´–ô –ê–ù–ê–õ–ò–ó:")
    print("-" * 60)
    
    correct = 0
    total = len(test_cases)
    
    for i, (text, lang, expected) in enumerate(test_cases, 1):
        print(f"\nüß™ –¢–ï–°–¢ {i}/{total}")
        print(f"üìù –¢–µ–∫—Å—Ç: '{text}'")
        print(f"üåç –Ø–∑—ã–∫: {lang}")
        print(f"üéØ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {expected}")
        print("-" * 40)
        
        try:
            if lang == "ru":
                result = classify_ru(text)
            else:
                result = classify_en(text)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            is_correct = result == expected
            status = "‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û" if is_correct else "‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û"
            
            print(f"üèÅ –ü–æ–ª—É—á–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            print(f"üìã –°—Ç–∞—Ç—É—Å: {status}")
            
            if is_correct:
                correct += 1
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")
            continue
        
        print("=" * 60)
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    accuracy = (correct / total) * 100
    print(f"\nüìà –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {correct}/{total}")
    print(f"üìä –¢–æ—á–Ω–æ—Å—Ç—å: {accuracy:.1f}%")
    
    if accuracy < 70:
        print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–∏–∑–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏!")
        print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("   ‚Ä¢ –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥—Ä—É–≥–æ–π –º–æ–¥–µ–ª–∏")
        print("   ‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–µ–∫—Å—Ç–∞")
        print("   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–Ω—Å–∞–º–±–ª—å –º–æ–¥–µ–ª–µ–π")
    
    print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    return accuracy >= 70

if __name__ == "__main__":
    test_sentiment_debug()
