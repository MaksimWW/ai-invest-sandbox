
#!/usr/bin/env python
"""
–¢–µ—Å—Ç RSS-–∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π
"""

import sys
sys.path.append('.')
from nlp.ru_sentiment import latest_news, classify, RSS_FEEDS

def test_rss_sources():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É RSS-–∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
    
    print("üì∞ –¢–ï–°–¢ RSS-–ò–°–¢–û–ß–ù–ò–ö–û–í –ù–û–í–û–°–¢–ï–ô")
    print("=" * 50)
    
    print(f"üîó –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:")
    for i, url in enumerate(RSS_FEEDS, 1):
        print(f"   {i}. {url}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–∏–∫–µ—Ä—ã
    test_tickers = ["YNDX", "SBER", "GAZP", "LKOH", "NVTK", "FXIT"]
    
    print(f"\nüîç –ò—â–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 48 —á–∞—Å–æ–≤...")
    print("-" * 50)
    
    total_news = 0
    
    for ticker in test_tickers:
        print(f"\nüìä {ticker}:")
        
        try:
            news_list = latest_news(ticker, hours=48)
            
            if news_list:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(news_list)} –Ω–æ–≤–æ—Å—Ç–µ–π")
                total_news += len(news_list)
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –Ω–æ–≤–æ—Å—Ç–∏
                for i, title in enumerate(news_list[:3], 1):
                    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
                    sentiment = classify(title)
                    emoji = {"positive": "üü¢", "negative": "üî¥", "neutral": "üü°"}[sentiment]
                    
                    print(f"   {i}. {emoji} {sentiment.upper()}: {title[:100]}...")
                
                if len(news_list) > 3:
                    print(f"   ... –∏ –µ—â—ë {len(news_list) - 3} –Ω–æ–≤–æ—Å—Ç–µ–π")
            else:
                print(f"   ‚ùå –ù–æ–≤–æ—Å—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
        except Exception as e:
            print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
    
    print(f"\nüìà –ò–¢–û–ì–û:")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {total_news}")
    print(f"   ‚Ä¢ –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤ RSS: {len(RSS_FEEDS)}")
    
    if total_news > 0:
        print("   ‚úÖ RSS-–∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("   ‚ö†Ô∏è –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º—ã —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏")

def test_individual_sources():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–∞–∂–¥—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –æ—Ç–¥–µ–ª—å–Ω–æ"""
    
    print(f"\nüîç –î–ï–¢–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ò–°–¢–û–ß–ù–ò–ö–û–í")
    print("-" * 50)
    
    import requests
    
    for i, url in enumerate(RSS_FEEDS, 1):
        print(f"\nüì° –ò—Å—Ç–æ—á–Ω–∏–∫ {i}: {url}")
        
        try:
            print("   üì§ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º RSS...")
            response = requests.get(url, timeout=10)
            
            print(f"   üìä HTTP Status: {response.status_code}")
            
            if response.status_code == 200:
                xml_content = response.text
                items_count = len(xml_content.split("<item>")) - 1
                print(f"   üì∞ –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {items_count}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞–∫ –ø—Ä–∏–º–µ—Ä
                if items_count > 0:
                    first_item = xml_content.split("<item>")[1]
                    if "<title>" in first_item and "</title>" in first_item:
                        title = first_item.split("<title>")[1].split("</title>")[0]
                        print(f"   üìù –ü—Ä–∏–º–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞: {title[:100]}...")
                        print("   ‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                    else:
                        print("   ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–∞—Ä—Å–∏–Ω–≥–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤")
                else:
                    print("   ‚ö†Ô∏è –ù–æ–≤–æ—Å—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    test_rss_sources()
    test_individual_sources()
