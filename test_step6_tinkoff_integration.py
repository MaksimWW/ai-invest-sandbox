
#!/usr/bin/env python
"""
–¢–ï–°–¢ –®–ê–ì–ê 6: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ Tinkoff API
"""

import os
from tinkoff_api import check_api_connection, get_prices_with_fallback, get_real_prices, get_demo_prices

def test_tinkoff_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Tinkoff API"""
    
    print("üß™ –¢–ï–°–¢ –®–ê–ì–ê 6: –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° TINKOFF API")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token = os.getenv("TINKOFF_SANDBOX_TOKEN")
    print(f"üîë TINKOFF_SANDBOX_TOKEN: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' if token else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
    
    if token:
        print(f"üìù –¢–æ–∫–µ–Ω: {token[:10]}...")
    
    print("\n" + "-" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
    print("üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Tinkoff API...")
    
    api_connected = check_api_connection()
    if api_connected:
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Tinkoff API: –£–°–ü–ï–®–ù–û")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
        print("\nüìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω...")
        real_prices = get_real_prices()
        
        if real_prices:
            print("‚úÖ –†–µ–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –ø–æ–ª—É—á–µ–Ω—ã:")
            for ticker, price in real_prices.items():
                print(f"   ‚Ä¢ {ticker}: {price:.2f} ‚ÇΩ")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã")
            
    else:
        print("‚ö†Ô∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Tinkoff API: –ù–ï –£–î–ê–õ–û–°–¨")
        print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π")
        print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é")
        print("   - API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    print("\n" + "-" * 30)
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω —Å fallback
    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω —Å fallback...")
    
    prices = get_prices_with_fallback()
    if prices:
        print("‚úÖ –¶–µ–Ω—ã –ø–æ–ª—É—á–µ–Ω—ã (—Ä–µ–∞–ª—å–Ω—ã–µ –∏–ª–∏ demo):")
        for ticker, price in prices.items():
            print(f"   ‚Ä¢ {ticker}: {price:.2f} ‚ÇΩ")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º
        if api_connected:
            print("‚ÑπÔ∏è  –†–µ–∂–∏–º: –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï")
        else:
            print("‚ÑπÔ∏è  –†–µ–∂–∏–º: DEMO –î–ê–ù–ù–´–ï")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—ã")
    
    print("\n" + "-" * 30)
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    print("üìã –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°:")
    
    if api_connected and real_prices:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("‚úÖ Tinkoff API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –†–µ–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –ø–æ–ª—É—á–∞—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")
        
        print("\nüöÄ –°–õ–ï–î–£–Æ–©–ò–ï –î–ï–ô–°–¢–í–ò–Ø:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python daily_plan_bot_ptb.py")
        print("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /prices - –¥–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã")
        print("3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /status - –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å ‚úÖ –¥–ª—è Tinkoff API")
        
        return True
        
    elif token and not api_connected:
        print("‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•")
        print("‚úÖ –¢–æ–∫–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print("‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        print("\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ —Ç–æ–∫–µ–Ω –¥–ª—è sandbox")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        
        return False
        
    else:
        print("‚ùå –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        
        print("\nüîß –ù–ê–°–¢–†–û–ô–ö–ê:")
        print("1. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –Ω–∞ https://developers.tinkoff.ru/")
        print("2. –î–æ–±–∞–≤—å—Ç–µ –≤ .env: TINKOFF_SANDBOX_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
        print("3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç")
        
        return False

if __name__ == "__main__":
    test_tinkoff_integration()
