
#!/usr/bin/env python
"""
üîç –®–ê–ì 2: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ê–ó–û–í–û–ì–û TELEGRAM –ë–û–¢–ê
==================================================
–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram API –∏ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—ã
"""

import os
import sys
import time
import requests
from dotenv import load_dotenv

def test_step2_telegram_basic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API"""
    
    print("üîç –®–ê–ì 2: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ê–ó–û–í–û–ì–û TELEGRAM –ë–û–¢–ê")
    print("=" * 60)
    
    load_dotenv()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    telegram_token = os.getenv("TELEGRAM_TOKEN")
    telegram_chat_id = os.getenv("TELEGRAM_CHAT_ID")
    
    print("üìã 1. –ü–†–û–í–ï–†–ö–ê API –°–û–ï–î–ò–ù–ï–ù–ò–Ø:")
    print("-" * 40)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ getMe
    try:
        url = f"https://api.telegram.org/bot{telegram_token}/getMe"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            bot_info = response.json()
            if bot_info.get("ok"):
                bot_name = bot_info["result"]["first_name"]
                bot_username = bot_info["result"]["username"]
                print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: {bot_name} (@{bot_username})")
            else:
                print("‚ùå API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:", bot_info)
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API: {e}")
        return False
    
    print("\nüìã 2. –ü–†–û–í–ï–†–ö–ê –û–¢–ü–†–ê–í–ö–ò –°–û–û–ë–©–ï–ù–ò–ô:")
    print("-" * 40)
    
    # –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        test_message = "üß™ –¢–ï–°–¢ –®–ê–ì 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π"
        url = f"https://api.telegram.org/bot{telegram_token}/sendMessage"
        
        payload = {
            "chat_id": telegram_chat_id,
            "text": test_message,
            "parse_mode": "HTML"
        }
        
        response = requests.post(url, json=payload, timeout=10)
        
        if response.status_code == 200:
            result = response.json()
            if result.get("ok"):
                message_id = result["result"]["message_id"]
                print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (ID: {message_id})")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", result)
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False
    
    print(f"\nüìã 3. –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –†–£–ß–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("-" * 50)
    print("–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤—Ä—É—á–Ω—É—é.")
    print("")
    print("üöÄ –ó–ê–ü–£–°–ö –ë–û–¢–ê:")
    print("   python daily_plan_bot_ptb.py")
    print("")
    print("üì± –ö–û–ú–ê–ù–î–´ –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –í TELEGRAM:")
    print("   /start - –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º")
    print("")
    print("‚è∞ –í–†–ï–ú–Ø –ù–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: 2-3 –º–∏–Ω—É—Ç—ã")
    print("")
    print("‚úÖ –ö–†–ò–¢–ï–†–ò–ò –£–°–ü–ï–•–ê:")
    print("   ‚Ä¢ –ë–æ—Ç –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫")
    print("   ‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ /start —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("   ‚Ä¢ –ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è")
    
    return True

def check_bot_running():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ –±–æ—Ç"""
    
    print(f"\nüìã 4. –ü–†–û–í–ï–†–ö–ê –ó–ê–ü–£–©–ï–ù–ù–û–ì–û –ë–û–¢–ê:")
    print("-" * 40)
    
    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ ps
    import subprocess
    try:
        result = subprocess.run(['ps', 'aux'], capture_output=True, text=True)
        if 'daily_plan_bot_ptb.py' in result.stdout:
            print("‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
            return True
        else:
            print("‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("   –í–æ–∑–º–æ–∂–Ω–æ, –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è")
            return False
    except Exception as e:
        print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã: {e}")
        return False

if __name__ == "__main__":
    print("ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –ë–û–¢–ê")
    print("=" * 60)
    
    success = test_step2_telegram_basic()
    
    if success:
        print(f"\nüéâ –®–ê–ì 2: –ë–ê–ó–û–í–´–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
        print("-" * 40)
        print("‚û°Ô∏è –°–õ–ï–î–£–Æ–©–ò–ï –î–ï–ô–°–¢–í–ò–Ø:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python daily_plan_bot_ptb.py")
        print("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –≤ Telegram")
        print("3. –ï—Å–ª–∏ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç ‚Üí –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python test_step3_telegram_commands.py")
    else:
        print(f"\n‚ùå –®–ê–ì 2: –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´!")
        print("-" * 30)
        print("–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç.")
