
#!/usr/bin/env python
"""
üîç –®–ê–ì 1: –ü–†–û–í–ï–†–ö–ê –û–ö–†–£–ñ–ï–ù–ò–Ø –ò –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
==================================================
"""

import os
import sys
from dotenv import load_dotenv

def test_step1_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–∑–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    
    print("üîç –®–ê–ì 1: –ü–†–û–í–ï–†–ö–ê –û–ö–†–£–ñ–ï–ù–ò–Ø")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    print("üì¶ 1. –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô:")
    print("-" * 30)
    
    required_packages = [
        ("python-telegram-bot", "telegram"),
        ("requests", "requests"),
        ("python-dotenv", "dotenv"),
        ("tinkoff-investments", "tinkoff.invest"),
        ("openai", "openai"),
        ("pandas", "pandas"),
        ("numpy", "numpy")
    ]
    
    missing_packages = []
    
    for package_name, import_name in required_packages:
        try:
            __import__(import_name)
            print(f"‚úÖ {package_name}")
        except ImportError:
            print(f"‚ùå {package_name}")
            missing_packages.append(package_name)
    
    if missing_packages:
        print(f"\n‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞–∫–µ—Ç—ã: {', '.join(missing_packages)}")
        return False
    
    print("\nüîß 2. –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø:")
    print("-" * 40)
    
    required_vars = [
        "TELEGRAM_TOKEN",
        "TELEGRAM_CHAT_ID", 
        "TINKOFF_SANDBOX_TOKEN",
        "OPENAI_API_KEY",
        "SHEETS_WEBHOOK_URL",
        "SHEETS_TOKEN"
    ]
    
    missing_vars = []
    
    for var in required_vars:
        value = os.getenv(var)
        if not value or value == "PLACEHOLDER":
            print(f"‚ùå {var}: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            missing_vars.append(var)
        else:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            display_value = value[:10] + "..." if len(value) > 10 else value
            print(f"‚úÖ {var}: {display_value}")
    
    if missing_vars:
        print(f"\n‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing_vars)}")
        print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï:")
        for var in missing_vars:
            if var == "TELEGRAM_TOKEN":
                print("‚Ä¢ TELEGRAM_TOKEN: –ø–æ–ª—É—á–∏—Ç–µ —É @BotFather –≤ Telegram")
            elif var == "TELEGRAM_CHAT_ID":
                print("‚Ä¢ TELEGRAM_CHAT_ID: –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É, –∑–∞—Ç–µ–º https://api.telegram.org/bot<TOKEN>/getUpdates")
            elif var == "TINKOFF_SANDBOX_TOKEN":
                print("‚Ä¢ TINKOFF_SANDBOX_TOKEN: –ø–æ–ª—É—á–∏—Ç–µ –≤ Tinkoff Invest API")
            elif var == "OPENAI_API_KEY":
                print("‚Ä¢ OPENAI_API_KEY: –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞ platform.openai.com")
            elif var == "SHEETS_WEBHOOK_URL":
                print("‚Ä¢ SHEETS_WEBHOOK_URL: URL Google Apps Script")
            elif var == "SHEETS_TOKEN":
                print("‚Ä¢ SHEETS_TOKEN: —Ç–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å Google Sheets")
        return False
    
    print("\nüìÅ 3. –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í:")
    print("-" * 25)
    
    required_files = [
        "main.py",
        "daily_plan_bot_ptb.py",
        "requirements.txt",
        ".env"
    ]
    
    for file_path in required_files:
        if os.path.exists(file_path):
            print(f"‚úÖ {file_path}")
        else:
            print(f"‚ùå {file_path}")
            return False
    
    print("\nüéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
    print("üöÄ –ì–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ—Ö–æ–¥—É –∫ –®–∞–≥—É 2")
    
    return True

if __name__ == "__main__":
    if test_step1_environment():
        print("\n‚û°Ô∏è –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì:")
        print("python test_step2_telegram_basic.py")
    else:
        print("\n‚ùå –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞")
