# ЦЕЛЬ: временно исключить все запросы к GDELT, не ломая NewsAPI / RSS.
#  1) закомментировать вызовы _gdelt_query
#  2) добавить ENV-флаг GDELT_OFF = 1
#  3) оставить fallback-структуру, чтобы легко вернуть GDELT позже
#  Никакие другие модули менять нельзя.

────────────────────────────────────────────────────────────────────────────
I. ИЗМЕНЕНИЯ В ФАЙЛЕ  nlp/news_feed.py
────────────────────────────────────────────────────────────────────────────
1. Найти блок/функцию  _gdelt_query (…)  и обернуть весь код
   в условие:

        import os
        if os.getenv("GDELT_OFF", "0") != "1":
            def _gdelt_query(...):
                «старый код»
        else:
            def _gdelt_query(*args, **kwargs):
                return []

2. В функции  fetch_news(...)  ВСТАВИТЬ перед вызовом _gdelt_query:

        if os.getenv("GDELT_OFF", "0") == "1":
            return news      # пропускаем GDELT

3. Ниже оставить комментарий:
        # NOTE: GDELT отключён, включить → убрать ENV GDELT_OFF.

────────────────────────────────────────────────────────────────────────────
II. ОБНОВИТЬ README / HELP
────────────────────────────────────────────────────────────────────────────
• Добавить строку:  
  “🔧  GDELT временно отключён (ENV GDELT_OFF=1). Используются только NewsAPI и RSS.”

────────────────────────────────────────────────────────────────────────────
III. ДОБАВИТЬ ПЕРЕМЕННУЮ В SECRETS
────────────────────────────────────────────────────────────────────────────
• В .env / Secrets создать  
      GDELT_OFF = 1

────────────────────────────────────────────────────────────────────────────
IV. ТЕСТ
────────────────────────────────────────────────────────────────────────────
1. Запустить `python - <<'PY' … PY`:
        from nlp.news_feed import fetch_news
        print(fetch_news("GAZP", 24)) 
   → должен вернуться список ТОЛЬКО с NewsAPI/RSS (timeout ≈ <2 с).

2. grep -R "_gdelt_query(" workspace/  
   → вызовы должны быть внутри блока if GDELT_OFF != "1".

# Конец промпта