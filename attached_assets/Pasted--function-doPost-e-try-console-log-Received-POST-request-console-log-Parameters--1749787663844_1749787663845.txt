
function doPost(e) {
  try {
    console.log('Received POST request');
    console.log('Parameters:', e.parameter);
    
    const data = e.parameter;
    
    // Проверяем токен
    if (data.token !== "mySecret123") {
      console.log('Unauthorized access attempt');
      return ContentService
        .createTextOutput(JSON.stringify({ok: false, error: "Unauthorized"}))
        .setMimeType(ContentService.MimeType.JSON);
    }
    
    // Если это просто тест подключения
    if (data.test === "ping") {
      console.log('Ping test request received');
      return ContentService
        .createTextOutput(JSON.stringify({
          ok: true, 
          message: "Webhook is working",
          timestamp: new Date().toISOString()
        }))
        .setMimeType(ContentService.MimeType.JSON);
    }
    
    // ВАЖНО: Замените на ID вашей таблицы Google Sheets
    // ID таблицы можно взять из URL: https://docs.google.com/spreadsheets/d/SPREADSHEET_ID/edit
    const SPREADSHEET_ID = "12kdk6h4cEs7q31ZjoUMvpAIhF3OC384XRRg6LtZKVdo"; // Замените на ваш ID!
    
    // Получаем конкретную таблицу по ID
    const spreadsheet = SpreadsheetApp.openById(SPREADSHEET_ID);
    const sheet = spreadsheet.getActiveSheet(); // или getSheetByName("Sheet1")
    
    if (!sheet) {
      console.log('No sheet found');
      return ContentService
        .createTextOutput(JSON.stringify({
          ok: false, 
          error: "Sheet not found. Check spreadsheet ID and sheet name."
        }))
        .setMimeType(ContentService.MimeType.JSON);
    }
    
    // Если первая строка пустая, добавляем заголовки
    const firstRow = sheet.getRange(1, 1, 1, 8).getValues()[0];
    if (firstRow[0] === '') {
      const headers = ['date', 'ticker', 'figi', 'side', 'price', 'qty', 'fees', 'pnl'];
      sheet.getRange(1, 1, 1, 8).setValues([headers]);
    }
    
// ---------- вычисляем pnl и записываем строку ----------
const price = parseFloat(data.price) || 0;
const qty   = parseInt(data.qty)    || 0;
const fees  = parseFloat(data.fees) || 0;
const pnl   = price * qty * (data.side === 'SELL' ? 1 : -1) - fees;

const rowData = [
  data.date || new Date().toISOString().split('T')[0],
  data.ticker || "",
  data.figi || "",
  data.side || "",
  price,
  qty,
  fees,
  pnl                      // <-- вместо timestamp
];

console.log('Adding row:', rowData);
sheet.appendRow(rowData);
    
    return ContentService
      .createTextOutput(JSON.stringify({
        ok: true, 
        message: "Trade logged successfully",
        data: rowData,
        spreadsheet_id: SPREADSHEET_ID
      }))
      .setMimeType(ContentService.MimeType.JSON);
      
  } catch (error) {
    console.error('Error in doPost:', error);
    return ContentService
      .createTextOutput(JSON.stringify({
        ok: false, 
        error: error.toString(),
        message: "Проверьте ID таблицы в коде скрипта"
      }))
      .setMimeType(ContentService.MimeType.JSON);
  }
}
/**  GET ?token=…  →  возвращает JSON {pnl: сумма}  */
function doGet(e){
  const secret = PropertiesService.getScriptProperties().getProperty('TOKEN');
  if (!e.parameter.token || e.parameter.token !== secret){
    return ContentService.createTextOutput('AUTH_FAIL');
  }

  const SPREADSHEET_ID = "12kdk6h4cEs7q31ZjoUMvpAIhF3OC384XRRg6LtZKVdo"; // тот же ID
  const sheet = SpreadsheetApp.openById(SPREADSHEET_ID).getActiveSheet();

  const lastRow = sheet.getLastRow();
  if (lastRow < 2){
    return ContentService
      .createTextOutput(JSON.stringify({pnl: 0}))
      .setMimeType(ContentService.MimeType.JSON);
  }

  // колонка H (8) — pnl
  const pnlRange = sheet.getRange(2, 8, lastRow - 1, 1).getValues();
  const total = pnlRange.reduce((acc, [v]) => acc + (parseFloat(v) || 0), 0);

  return ContentService
    .createTextOutput(JSON.stringify({pnl: total}))
    .setMimeType(ContentService.MimeType.JSON);
}