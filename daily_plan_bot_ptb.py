# ==== python-telegram-bot v20 =================================================
import os, logging
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
)

TOKEN = os.getenv("TELEGRAM_TOKEN")  # –≤–æ–∑—å–º—ë—Ç –∏–∑ Secrets

logging.basicConfig(
    format="%(asctime)s [%(levelname)s] %(name)s: %(message)s",
    level=logging.WARNING,  # –£–º–µ–Ω—å—à–∞–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é
)
# –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
logging.getLogger("httpx").setLevel(logging.WARNING)
logging.getLogger("telegram").setLevel(logging.WARNING)

logger = logging.getLogger(__name__)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –•–≠–ù–î–õ–ï–†–´ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def cmd_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫—Ä–∞—Ç–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞"""
    message = """ü§ñ **AI Invest PlanBot –∑–∞–ø—É—â–µ–Ω!**

üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
‚Ä¢ /help - –ø–æ–ª–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
‚Ä¢ /prices - —Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã –∞–∫—Ü–∏–π
‚Ä¢ /signals - —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã  
‚Ä¢ /status - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã

üí° –û—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏!"""
    
    await update.message.reply_text(message, parse_mode='Markdown')

async def cmd_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """/help ‚Äî —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
    message = """ü§ñ **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º AI Invest PlanBot**

üìà **–¢–æ—Ä–≥–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ `/prices` - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã –∞–∫—Ü–∏–π YNDX, FXIT
‚Ä¢ `/signals` - –ø–æ–ª—É—á–∏—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –∞–∫—Ü–∏–π

‚öôÔ∏è **–°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ `/status` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π (Tinkoff API, Google Sheets)
‚Ä¢ `/help` - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
‚Ä¢ `/start` - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞

üìä **–û –±–æ—Ç–µ:**
–ë–æ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä—ã–Ω–æ–∫ –∞–∫—Ü–∏–π, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –∏ –≤–µ–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å."""
    
    await update.message.reply_text(message, parse_mode='Markdown')

async def cmd_prices(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """/prices ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã –∞–∫—Ü–∏–π"""
    try:
        message = """üìà **–¢–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã –∞–∫—Ü–∏–π**

‚ö†Ô∏è DEMO —Ä–µ–∂–∏–º - —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:

‚Ä¢ **YNDX**: 2,450.50 ‚ÇΩ üìà (+1.2%)
‚Ä¢ **FXIT**: 1,180.25 ‚ÇΩ üìâ (-0.8%)

üïê –û–±–Ω–æ–≤–ª–µ–Ω–æ: —Ç–æ–ª—å–∫–æ —á—Ç–æ
üí° –î–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Tinkoff API"""
        
        await update.message.reply_text(message, parse_mode='Markdown')
        
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω: {str(e)}")

async def cmd_signals(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """/signals ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã"""
    try:
        message = """üìä **–¢–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã**

‚ö†Ô∏è DEMO —Ä–µ–∂–∏–º - —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã:

‚Ä¢ **YNDX**: üü¢ BUY (—Å–∏–ª–∞: 75%)
  ‚îî SMA –ø—Ä–æ—Ä—ã–≤ + –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
  
‚Ä¢ **FXIT**: üü° HOLD (—Å–∏–ª–∞: 45%)
  ‚îî –ë–æ–∫–æ–≤–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ, –∂–¥–µ–º —Å–∏–≥–Ω–∞–ª–∞

üïê –û–±–Ω–æ–≤–ª–µ–Ω–æ: —Ç–æ–ª—å–∫–æ —á—Ç–æ
üí° –î–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ API"""
        
        await update.message.reply_text(message, parse_mode='Markdown')
        
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤: {str(e)}")

async def cmd_status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """/status ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"""
    try:
        message = """‚öôÔ∏è **–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã**

üîó **API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:**
‚Ä¢ Telegram API: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç
‚Ä¢ Tinkoff API: ‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
‚Ä¢ Google Sheets: ‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
‚Ä¢ OpenAI API: ‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω

üìä **–§—É–Ω–∫—Ü–∏–∏:**
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π: ‚úÖ 
‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω: ‚ö†Ô∏è DEMO —Ä–µ–∂–∏–º
‚Ä¢ –¢–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã: ‚ö†Ô∏è DEMO —Ä–µ–∂–∏–º
‚Ä¢ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: ‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ

üîß **–î–ª—è –ø–æ–ª–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ:**
1. TINKOFF_SANDBOX_TOKEN –≤ .env
2. OPENAI_API_KEY –≤ .env  
3. SHEETS_WEBHOOK_URL –≤ .env"""
        
        await update.message.reply_text(message, parse_mode='Markdown')
        
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {str(e)}")

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –∑–∞–ø—É—Å–∫ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def run_bot() -> None:
    print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
    print(f"üì± Token: {TOKEN[:10] if TOKEN else '–ù–ï –ù–ê–ô–î–ï–ù'}...")
    
    if not TOKEN:
        print("‚ùå –û–®–ò–ë–ö–ê: TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return
    
    try:
        application = ApplicationBuilder().token(TOKEN).build()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        application.add_handler(CommandHandler("start", cmd_start))
        application.add_handler(CommandHandler("help", cmd_help))
        application.add_handler(CommandHandler("prices", cmd_prices))
        application.add_handler(CommandHandler("signals", cmd_signals))
        application.add_handler(CommandHandler("status", cmd_status))
        
        print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print("üöÄ –ó–∞–ø—É—Å–∫ polling —Ä–µ–∂–∏–º–∞...")
        print("üìû –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É /start –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
        print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+C")
        print("-" * 50)
        
        logger.info("Bot started üöÄ (PTB v20)")
        application.run_polling()
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ó–ê–ü–£–°–ö–ê –ë–û–¢–ê: {e}")
        return

# –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å:  python daily_plan_bot_ptb.py
if __name__ == "__main__":
    run_bot()
# ==============================================================================