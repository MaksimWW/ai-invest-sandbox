
#!/usr/bin/env python
"""
üß™ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ö–û–ú–ê–ù–î–´ /sentiment
==================================
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Telegram
"""

import os
import sqlite3
import datetime as dt
from db.storage import insert

def simple_sentiment_test():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã /sentiment"""
    
    print("üöÄ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ö–û–ú–ê–ù–î–´ /sentiment")
    print("=" * 50)
    
    # 1) –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("üìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏...")
    
    now = dt.datetime.utcnow()
    test_data = [
        (now - dt.timedelta(hours=1), "SBER", "–°–±–µ—Ä–±–∞–Ω–∫ –ø–æ–∫–∞–∑–∞–ª –æ—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", 1, "test"),
        (now - dt.timedelta(hours=2), "SBER", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ–≤—ã—Å–∏–ª–∏ –ø—Ä–æ–≥–Ω–æ–∑—ã –ø–æ –±–∞–Ω–∫—É", 1, "test"),
        (now - dt.timedelta(hours=3), "SBER", "–ü—Ä–æ–±–ª–µ–º—ã –≤ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å–µ–∫—Ç–æ—Ä–µ", -1, "test"),
        (now - dt.timedelta(hours=4), "SBER", "–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ —Ä—ã–Ω–∫–µ", 0, "test"),
        (now - dt.timedelta(hours=25), "SBER", "–°—Ç–∞—Ä–∞—è –Ω–æ–≤–æ—Å—Ç—å", 1, "test"),  # –ó–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ 24—á
    ]
    
    for dt_val, ticker, headline, label, source in test_data:
        insert(dt_val.isoformat(timespec="seconds"), ticker, headline, label, source)
    
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(test_data)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π")
    
    # 2) –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    ticker = "SBER"
    hours = 24
    
    try:
        db_path = os.getenv("NEWS_DB", "db/news_cache.db")
        db = sqlite3.connect(db_path)
        
        query = """
          SELECT dt, headline, label
          FROM   news
          WHERE  ticker = ? AND dt >= datetime('now', ? || ' hours')
          ORDER  BY dt DESC
          LIMIT  5
        """
        
        rows = db.execute(query, (ticker, -hours)).fetchall()
        db.close()
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(rows)}")
        
        if rows:
            def emoji(lbl):
                return {1:"üëç", -1:"üëé", 0:"‚ö™"}.get(lbl, "‚ùì")
            
            print(f"\nüì∞ –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è {ticker} –∑–∞ {hours}—á:")
            print("-" * 60)
            
            for i, (dt_str, headline, label) in enumerate(rows, 1):
                print(f"{i}. {emoji(label)} {headline}")
            
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
            lines = [f"üì∞ *{ticker}* ¬∑ {hours}—á\n"]
            for dt_str, headline, label in rows:
                lines.append(f"{emoji(label)} {headline[:120]}")
            
            bot_response = "\n".join(lines)
            
            print(f"\nü§ñ –û—Ç–≤–µ—Ç –±–æ—Ç–∞:")
            print("-" * 60)
            print(bot_response)
            
            return True
        else:
            print(f"‚ùå –ó–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è {ticker}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False

def test_different_scenarios():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏"""
    
    print("\nüß™ –¢–ï–°–¢ –†–ê–ó–ù–´–• –°–¶–ï–ù–ê–†–ò–ï–í")
    print("=" * 40)
    
    scenarios = [
        ("SBER", 12, "–¢–µ—Å—Ç –∑–∞ 12 —á–∞—Å–æ–≤"),
        ("SBER", 6, "–¢–µ—Å—Ç –∑–∞ 6 —á–∞—Å–æ–≤"),
        ("YNDX", 24, "–¢–µ—Å—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–∏–∫–µ—Ä–∞"),
    ]
    
    for ticker, hours, description in scenarios:
        print(f"\nüìã {description}: /sentiment {ticker} {hours}")
        
        try:
            db = sqlite3.connect(os.getenv("NEWS_DB", "db/news_cache.db"))
            query = """
              SELECT COUNT(*) as count
              FROM   news
              WHERE  ticker = ? AND dt >= datetime('now', ? || ' hours')
            """
            
            result = db.execute(query, (ticker, -hours)).fetchone()
            count = result[0] if result else 0
            db.close()
            
            if count > 0:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {count} –∑–∞–ø–∏—Å–µ–π")
            else:
                print(f"   üì≠ –ó–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üéØ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ –∫–æ–º–∞–Ω–¥—ã /sentiment\n")
    
    success = simple_sentiment_test()
    test_different_scenarios()
    
    print("\n" + "=" * 50)
    if success:
        print("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û")
        print("üí° –ö–æ–º–∞–Ω–¥–∞ /sentiment –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ Telegram –±–æ—Ç–µ")
    else:
        print("‚ö†Ô∏è –¢–ï–°–¢ –ù–ï –ü–†–û–®–ï–õ")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    
    print("\nüì± –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Telegram –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   /sentiment SBER")
    print("   /sentiment SBER 12")
    print("   /sentiment YNDX 24")
